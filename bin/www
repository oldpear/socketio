#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('chat:server');
var http = require('http');

//1.3.3需要require('socket.io')(),后面要加一个括号
var io = require('socket.io')();

/**
 * Get port from environment and store in Express.
 */

var port = parseInt(process.env.PORT, 10) || 3000;
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port,"192.168.1.202", function() {
    console.log('Listening on port %d', server.address().port);
});
//server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

io.attach(server,{serveClient:true});

/**
 * Added by Leon for conduct the socket connection
 */
console.log('test');

//io.socket.on('connection',function(socket){  //io.on和io.socket.on一样
io.on('connection',function(socket){
console.log('test in the io.on');
  socket.emit('welcome',{text:'oh,Hi!U r connected!'});
});


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  debug('Listening on port ' + server.address().port);
}
